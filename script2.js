//1. Дан код, Почему код даёт именно такие результаты?

// var a = 1, b = 1, c, d;
// c = ++a; alert(c);           // 2 в префиксной форме возвращает уже увеличенную переменную
// d = b++; alert(d);           // 1 в постфиксной же до ее увеличения
// c = (2 + ++a); alert(c);      // 5 
// d = (2 + b++); alert(d);      // 4
// alert(a);                    // 3 при этом сама переменная увеличивается
// alert(b);                    // 3 в обоих случаях


//2. Чему будет равен x в примере ниже?

// var a = 2;
// var x = 1 + (a *= 2); // а становится равной самой себе, умноженной на 2 ответ 5


//3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. 
//Затем написать скрипт, который работает по следующему принципу:
// если a и b положительные, вывести их разность;
// если а и b отрицательные, вывести их произведение;
// если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом.

// let a = 2;
// let b = 6;
// if (a >= 0 && b >= 0) {
//     alert(a - b);
// } else if (a < 0 && b < 0) {
//     alert(a * b);
// } else {
//     alert(a + b);
// }


//4. Присвоить переменной а значение в промежутке [0..15]. 
//С помощью оператора switch организовать вывод чисел от a до 15.
// let a = 3;
// switch (a) {
//     case 1:
//         console.log(1);
//     case 2:
//         console.log(2);
//     case 3:
//         console.log(3);
//     case 4:
//         console.log(4);
//     case 5:
//         console.log(5);
//     case 6:
//         console.log(6);
// };


// alert(power(3, 4))
//5. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. 
//Обязательно использовать оператор return.

// function sum(a, b) {
//     return a + b
// }
// function sub(a, b) {
//     return a - b
// }
// function multi(a, b) {
//     return a * b
// }
// function seg(a, b) {
//     return a / b
// }


//6. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – 
// - значения аргументов, operation – строка с названием операции. 
//В зависимости от переданного значения операции выполнить одну из арифметических операций 
//(использовать функции из пункта 5) и вернуть полученное значение (использовать switch).

// function mathOperation(arg1, arg2, operation) {
//     switch (operation) {
//         case "+":
//             return sum(arg1, arg2);
//             break;
//         case "-":
//             return sub(arg1, arg2);
//             break;
//         case "*":
//             return multi(arg1, arg2);
//             break;
//         case "/":
//             return seg(arg1, arg2);
//             break;
//     }
// }


//7. *Сравнить null и 0. Попробуйте объяснить результат.

// alert( null > 0 );  // (1) false
// alert( null == 0 ); // (2) false
// alert( null >= 0 ); // (2) true

//Если вкратце, гугл сказал, что операции сравнения приводят null к числовому значению 0 
// Для нестрогих равенств же, null равен только undefaind, далее цитирую: 
//"Эти значения равны друг другу и не равны никаким другим значениям. Это специальное правило языка."


////8. *С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val
// – заданное число, pow – степень.

// function power(val, pow) {
//     if (pow == 1) {
//         return val;
//     } else {
//         return val * power(val, pow - 1);
//     }
